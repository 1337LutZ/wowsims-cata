@use "sass:map";

@font-face {
	font-family: SimDefaultFont;
	src: url(/wotlk/assets/fonts/PlusJakartaSans-Regular.woff2);
}

@font-face {
	font-family: SimDefaultFont;
	src: url(/wotlk/assets/fonts/PlusJakartaSans-Bold.woff2);
	font-weight: bold;
}

:root {
  --bs-body-font-family: SimDefaultFont;
  --bs-body-line-height: 1.25;
}

.container {
  height: 100%;
  display: flex;
}

.dropdown-menu {
  &[data-bs-popper] {
    margin: 0 !important;
  }
}

.form-check {
  padding: 0;

  &.form-check-reverse {
    text-align: left;

    .form-check-input {
      margin: 0;
    }
  }

  .form-check-input {
    width: $form-check-input-width !important;
    height: $form-check-input-width !important;
  }
}

.link-danger {
  color: $link-danger-color !important;

  &:hover, &:focus, &.active {
    color: darken($link-danger-color, 3) !important;
  }
}

.modal {
  .modal-dialog {
    .modal-header {
      padding-left: 0;
      padding-right: 0;
      margin-left: $modal-header-padding-x;
      margin-right: $modal-header-padding-x;
      align-items: flex-start;
    }
  }
}

.navbar {
  .navbar-toggler {
    border: 0;
    box-shadow: none;
    color: white;
  }

  .nav-link {
    display: flex;
    align-items: center;
    white-space: nowrap;
  }
}

.nav-tabs {
  .nav-item {
    .nav-link {
      margin-bottom: 0;
      border: 0;
      font-weight: bold;
      white-space: nowrap;

      &.active {
        position: relative;

        &::after {
          content: "";
          position: absolute;
          height: 2px;
          background: $nav-tabs-link-active-color;
          bottom: 0;
          left: 0;
          right: 0;
        }
      }
    }
  }
}

// Class-themed form checks
@each $color, $value in $theme-colors {
  .form-check-#{$color} {
    @extend .form-check;

    .form-check-input:checked[type="checkbox"] {
      background-color: $value;
      background-image: escape-svg(
        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{color-contrast($value)}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/></svg>")
      );
    }

    .form-check-input:checked[type="radio"] {
      background-color: $value;
      background-image: escape-svg(
        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{color-contrast($value)}'/></svg>")
      );
    }
  }
}

@include media-breakpoint-down(xl) {
  .tooltip {
    --bs-tooltip-max-width: #{$tooltip-max-width-lg};
  }
}

@include media-breakpoint-down(lg) {
  .container {
    width: 100%;
    max-width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

@include media-breakpoint-down(md) {
  .navbar {
    .navbar-collapse {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      padding: 1rem;
      background: rgba(0,0,0,.9);
      z-index: 1000;
  
      .navbar-nav {
        position: relative;
        align-items: flex-start;

        .navbar-toggler {
          position: absolute;
          top: 0;
          right: 0;
        }

        .nav-link {
          padding-bottom: map.get($spacers, 3);

          &:first-of-type {
            padding-top: map.get($spacers, 2);
          }
        }
      }
    }
  }
}

@include media-breakpoint-down(md) {
  .tooltip {
    --bs-tooltip-max-width: #{$tooltip-max-width-sm};
  }
}